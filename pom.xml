<?xml version="1.0" encoding="UTF-8"?>
<!--  @formatter:off-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>rtr-boot-parent</artifactId>
        <groupId>com.rtr.boot</groupId>
        <relativePath />
        <version>0.2.31</version>
    </parent>

    <artifactId>open-api-service</artifactId>
    <description>Proof-of-concept OpenAPI-first project</description>
    <groupId>com.rtr.example</groupId>
    <modelVersion>4.0.0</modelVersion>
    <name>open-api-service</name>
    <version>1.0.0-SNAPSHOT</version>


    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <kotlin.version>1.6.21</kotlin.version>
        <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>
        <kotlin.logging.version>2.1.23</kotlin.logging.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>com.rtr.boot</groupId>
            <artifactId>rtr-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging-jvm</artifactId>
            <version>${kotlin.logging.version}</version>
        </dependency>
        <dependency>
            <groupId>com.rtr.boot</groupId>
            <artifactId>rtr-boot-metric-starter</artifactId>
        </dependency>

        <!-- Dependencies Required for Client generation -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.10.0</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.moshi</groupId>
            <artifactId>moshi-kotlin</artifactId>
            <version>1.14.0</version>
        </dependency>

        <!-- Swagger UI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.6.11</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-webflux-ui</artifactId>
            <version>1.6.11</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-kotlin</artifactId>
            <version>1.6.11</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>com.rtr.boot</groupId>
            <artifactId>rtr-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>maven-releases</id>
            <name>Artifactory Maven Releases</name>
            <url>https://artifactory.rtr.cloud/artifactory/maven-releases/</url>
        </repository>
    </repositories>


    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <resources>
            <resource>
                <directory>/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <sourceDirs>
                        <sourceDir>src/main/kotlin</sourceDir>
                        <sourceDir>target/generated-sources/openapi/src/main/kotlin</sourceDir>
                    </sourceDirs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>5.4.0</version>
                <executions>
                    <!-- Generate Server -->
                    <!-- https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/kotlin-spring.md -->
                    <execution>
                        <id>generate-server</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/spec/petstore.yaml
                            </inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <apiPackage>com.rtr.example.api</apiPackage>
                            <modelPackage>com.rtr.example.model</modelPackage>
                            <supportingFilesToGenerate>
                                ApiUtil.kt
                            </supportingFilesToGenerate>
                            <sourceFolder>${project.basedir}/target/generated-sources</sourceFolder>
                            <configOptions>
                                <delegatePattern>true</delegatePattern>
                            </configOptions>
                        </configuration>
                    </execution>

                    <!-- Generate Client -->
                    <!-- https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/kotlin.md -->
                    <execution>
                        <id>generate-client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/spec/petstore.yaml
                            </inputSpec>
                            <generatorName>kotlin</generatorName>
                            <packageName>com.rtr.example.api.client</packageName>
                            <sourceFolder>${project.basedir}/target/generated-sources</sourceFolder>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${basedir}/target/classes/resources</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<!--  @formatter:on-->
